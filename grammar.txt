# Minimal RISC-V assembly grammar in EBNF.
# Austin Henley
# 9/30/2020

program ::= {labeldecl | instruction} 
labeldecl ::= labelref ':' ['\n']
instruction ::= mnemonic [operand [',' operand [',' operand]]] '\n' 
operand ::= number | number '(' register ')' | register | labelref 


# Lexer rules in regex.

nl ::= ('\r\n'|'\n'|'\r')+
number ::= ('+' | '-')[0-9]+
register ::= [a-zA-Z][a-zA-Z0-9]+
mnemonic ::= [a-zA-Z]('.'?[a-zA-Z0-9])*
labelref ::= [a-zA-Z0-9]+

