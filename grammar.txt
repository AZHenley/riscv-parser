# Minimal RISC-V assembly grammar in EBNF.
# Austin Henley
# 10/11/2020

program ::= {[label] [directive | instruction] [comment] newline}
label ::= symbol ':'
directive ::= '.' symbol [symbol {',' symbol}]
instruction ::= symbol [operand {',' operand}]
operand ::= ['+' | '-'] symbol '(' symbol ')' | symbol

# Lexer rules in regex-ish.
newline ::= [\n\r]+
comment ::= [^\n\r]+
symbol ::= ([a-zA-Z0-9]('.'?[a-zA-Z0-9])*) | (\"(\\[^\n]|[^"\n])*\")

# Whitespace, commas, colons, and parantheses are token delimiters.
# Spaces and tabs can be used interchangeably and consecutively.
# Correctness of symbols and the number of arguments will be verified later.